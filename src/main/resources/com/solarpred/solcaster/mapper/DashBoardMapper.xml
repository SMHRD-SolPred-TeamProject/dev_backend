<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solarpred.solcaster.mapper.DashBoardMapper">

    <!-- 현재 발전량 20개 가져오기  -->
    <select id="getAOD" parameterType="map" resultType="com.solarpred.solcaster.domain.DashBoard">
        <![CDATA[
        select * from s_real_data where r_date <= (select r_date from s_real_data where r_date like #{parsingTime}) order by r_date desc limit #{cnt}
        ]]>
    </select>

    <!-- 누적된 현재 발전량 값 몇 개 중 제일 오래된 값 가져오기  -->
    <select id="getFirstTotal" parameterType="map" resultType="double">
        <![CDATA[
        select round(sum(r_aod)/1000,2) as r_aod from s_real_data
        where r_date between
            (select r_date from s_real_data where r_date like #{parsingTime1} limit 1)
            and
            (select r_date from (select r_date from s_real_data where r_date <= #{parsingTime2} order by r_date desc limit #{cnt}) a order by r_date limit 1);
        ]]>
    </select>

    <!--  누적된 현재 발전량 값 몇개 중에서 -1 된 값들 가져오기  -->
    <select id="remainValues" parameterType="map" resultType="double">
        <![CDATA[
        select round(r_aod / 1000,2) from s_real_data where r_date <= (select r_date from s_real_data where r_date like #{parsingTime2}) order by r_date desc limit #{cnt}
        ]]>
    </select>

    <!--  현재시간 발전량 가져오기  -->
    <select id="currentGetAOD" parameterType="String" resultType="com.solarpred.solcaster.domain.DashBoard">
        select * from s_real_data where r_date like #{parsingTime}
    </select>

    <!--  ================================================================================================================================================================================  -->

    <!-- 예측 발전량 값 몇 개 중 제일 오래된 값 가져오기  -->
    <select id="getPreFirstTotal" parameterType="map" resultType="double">
        <![CDATA[
        select round(sum(pred_aod)/1000) as pred_aod from s_prediction
        where pred_time between
                      (select pred_time from s_prediction where pred_time like #{parsingTime2} limit 1)
            and
            (select pred_time from (select pred_time from s_prediction where pred_time <= #{parsingTime1} order by pred_time desc limit #{cnt}) a order by pred_time limit 1)
        ]]>
    </select>

    <!--  누적된 예측 발전량 값 몇개 중에서 -1 된 값들 가져오기  -->
    <select id="remainPreValues" parameterType="map" resultType="double">
        <![CDATA[
        select pred_aod / 1000 from s_prediction where pred_time <= (select pred_time from s_prediction where pred_time like #{parsingTime}) order by pred_time desc limit #{cnt}
        ]]>
    </select>


    <!-- 예측 발전량 20개 가져오기  -->
    <select id="getPreAOD" parameterType="String" resultType="com.solarpred.solcaster.domain.Prediction">
        <![CDATA[
        select * from s_prediction where pred_time <= (select pred_time from s_prediction where pred_time like #{parsingTime}) order by pred_time desc limit 20
        ]]>
    </select>

    <!--  1시간 후 발전량 가져오기  -->
    <select id="preGetAOD" parameterType="String" resultType="com.solarpred.solcaster.domain.Prediction">
        select * from s_prediction where pred_time like #{parsingTime}
    </select>

    <select id="DashBoardSelect" parameterType="String" resultType="com.solarpred.solcaster.domain.DashBoard">
        select * from s_real_data where r_date like #{parsingTime} order by r_date desc limit 1
    </select>

    <select id="PredictionSelect" parameterType="String" resultType="com.solarpred.solcaster.domain.Prediction">
        select * from s_prediction where pred_time like #{parsingTime2}
    </select>

    <select id="PreTotalSelect" parameterType="String" resultType="double">
        select sum(pred_aod)/1000 from s_prediction where pred_time like #{parsingTime}
    </select>

    <select id="realTotalSelect" parameterType="map" resultType="int">
        select sum(r_aod)/1000 from s_real_data where r_date between #{parsingTime2} and #{parsingTime}
    </select>

    <!-- 예측 발전량 테이블에서 특정시간 발전량값 가져오기  -->
    <select id="getPreParicularTime" parameterType="String" resultType="double">
        select pred_aod from s_prediction where pred_time = #{time}
    </select>

</mapper>